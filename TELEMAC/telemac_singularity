Bootstrap: docker
From: ubuntu:22.04

%files
    # Copy configuration files from local
    pysource.sh /opt
    systel.cfg /opt


%environment
	
%post
    # Environment variables
	echo "export HDF5HOME=/usr/lib/x86_64-linux-gnu/hdf5/serial" >> $SINGULARITY_ENVIRONMENT
	HDF5HOME=/usr/lib/x86_64-linux-gnu/hdf5/serial
	
	echo "export TZ=America/Toronto" >> $SINGULARITY_ENVIRONMENT
	TZ=America/Toronto
	
	echo "export USETELCFG=gfortranMPI" >> $SINGULARITY_ENVIRONMENT
	USETELCFG=gfortranMPI
	
	echo "export HOMETEL=/opt/telemac-mascaret-v8p4r0" >> $SINGULARITY_ENVIRONMENT
	HOMETEL=/opt/telemac-mascaret-v8p4r0
	
    # Set timezone
    ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime
    echo ${TZ} > /etc/timezone

    # Install packages
    apt-get update
    apt-get install -y git wget python-is-python3 python3-numpy python3-distutils libpython3-dev gfortran make python3-scipy python3-matplotlib openmpi-bin libopenmpi-dev metis libmetis-dev

    # Download and install Telemac-Mascaret
    cd /tmp
    wget -c https://gitlab.pam-retd.fr/otm/telemac-mascaret/-/archive/v8p4r0/telemac-mascaret-v8p4r0.tar.gz
    tar -xvzf telemac-mascaret-v8p4r0.tar.gz -C /opt
    rm -rf telemac-mascaret-v8p4r0.tar.gz /opt/telemac-mascaret-v8p4r0/examples

    # Clean up any existing extraction directory
    rm -rf /tmp/hdf5-1.10.3

    # Download and install HDF5
    cd /tmp
    wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.3/src/hdf5-1.10.3.tar.gz
    gunzip -f hdf5-1.10.3.tar.gz
    tar -xvf hdf5-1.10.3.tar
    cd hdf5-1.10.3
    ./configure -prefix=${HOMETEL}/optionals/hdf5 -enable-parallel
    make
    make install

    # Download and install MED
    cd /tmp
    wget -c http://files.salome-platform.org/Salome/other/med-4.1.0.tar.gz
    tar -xvzf med-4.1.0.tar.gz
    cd med-4.1.0
    ./configure -prefix=${HOMETEL}/optionals/med-4.1.0 --with-hdf5=${HOMETEL}/optionals/hdf5 --disable-python
    make
    make install
    rm -rf /tmp/med-4.1.0.tar.gz /tmp/med-4.1.0
  
	# Set environment variables
    echo "export PATH=${HOMETEL}/scripts/python3:.:$PATH" >> $SINGULARITY_ENVIRONMENT
	PATH=${HOMETEL}/scripts/python3:.:$PATH
	
    echo "export SYSTELCFG=${HOMETEL}/configs/systel.cfg" >> $SINGULARITY_ENVIRONMENT
	SYSTELCFG=${HOMETEL}/configs/systel.cfg
	
    echo "export USETELCFG=${USETELCFG}" >> $SINGULARITY_ENVIRONMENT
	USETELCFG=${USETELCFG}
	
    echo "export SOURCEFILE=${HOMETEL}/configs/pysource.sh" >> $SINGULARITY_ENVIRONMENT
	SOURCEFILE=${HOMETEL}/configs/pysource.sh
	
    echo "export PYTHONUNBUFFERED='true'" >> $SINGULARITY_ENVIRONMENT
	PYTHONUNBUFFERED='true'
	
    echo "export PYTHONPATH=${HOMETEL}/scripts/python3:\$PYTHONPATH" >> $SINGULARITY_ENVIRONMENT
	PYTHONPATH=${HOMETEL}/scripts/python3:\$PYTHONPATH
	
    echo "export LD_LIBRARY_PATH=${HOMETEL}/builds/${USETELCFG}/wrap_api/lib:\$LD_LIBRARY_PATH" >> $SINGULARITY_ENVIRONMENT
	LD_LIBRARY_PATH=${HOMETEL}/builds/${USETELCFG}/wrap_api/lib:\$LD_LIBRARY_PATH
	
    echo "export PYTHONPATH=${HOMETEL}/builds/${USETELCFG}/wrap_api/lib:\$PYTHONPATH" >> $SINGULARITY_ENVIRONMENT
	PYTHONPATH=${HOMETEL}/builds/${USETELCFG}/wrap_api/lib:\$PYTHONPATH
	

    # Copy configuration files
    cp /opt/pysource.sh ${HOMETEL}/configs/
    cp /opt/systel.cfg ${HOMETEL}/configs/


    # Run configuration and compilation
    config.py
    compile_telemac.py

    # Create a user and set the working directory
    useradd -ms /bin/bash mascaret
    mkdir -p /mnt
    chown mascaret:mascaret /mnt

    # Clean up
    apt-get clean
